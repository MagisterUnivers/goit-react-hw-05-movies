{"version":3,"file":"static/js/277.7b2d56af.chunk.js","mappings":"sMAgHA,UA3GkB,WAChB,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAQF,EAAYG,IAAI,SACxBC,GAAWC,EAAAA,EAAAA,OAmBjBC,EAAAA,EAAAA,YAAU,WACJJ,IACFK,EAAAA,EAAAA,IAAqBL,GAClBM,MAAK,SAAAC,GACJb,EAAUa,EAAIC,KAAKC,QACpB,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,QACnB,GAEN,GAAE,CAACd,IAcJ,OACE,iCACE,4BACE,mCACA,+DACA,iBAAMe,SAjBS,SAAAC,GACnBA,EAAEC,iBAEFlB,EAAe,CAAEC,MAAOgB,EAAEE,cAAcC,OAAOC,OAOhD,EAOK,UACE,8BACE,iBACEC,MAAO,CACLC,SAAU,OACVC,UAAW,SACXC,MAAO,QACPC,WAAY,QALhB,sBAUA,mBACA,kBACEJ,MAAO,CACLK,MAAO,QACPC,UAAW,OACXC,QAAS,MACTC,OAAQ,mBAEVC,YAAY,gCACZC,KAAK,OACLC,KAAK,SACLZ,MAAOzB,EACPsC,SAAU,SAAAjB,GACRpB,EAAcoB,EAAEE,cAAcE,MAC/B,aAMT,0BACE,0BACE,wBACqB,IAAlB3B,EAAOyC,QACNzC,EAAO0C,KAAI,SAACC,EAAOC,GAAR,OACT,yBAEE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMvC,GAAhD,SAEGkC,EAAMM,MAAN,UACML,EAAQ,EADd,aACoBD,EAAMM,OAD1B,UAEML,EAAQ,EAFd,aAEoBD,EAAMJ,SANtBI,EAAMG,GADN,YAgBxB,C,oKC5GYI,EAAU,mCACVC,EAAW,gCAEXC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,oCAAiDD,GACzD,EACYI,EAAsB,SAAAR,GACjC,OAAOO,EAAAA,EAAAA,IAAA,YAGPF,EAHO,iBAGUL,EAHV,oBAGwBI,IAE5BrC,MAAK,SAAA0C,GAAQ,OAAIA,EAASxC,IAAb,GACjB,EACYyC,EAAc,SAAAV,GACzB,OAAOO,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BL,EAA9B,4BAAoDI,GAC5D,EACYO,EAAiB,SAAAX,GAC5B,OAAOO,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BL,EAA9B,4BAAoDI,GAC5D,EACYtC,EAAuB,SAAA8C,GAClC,OAAOL,EAAAA,EAAAA,IAAA,YACPF,EADO,8BACuBO,EADvB,oBAC0CR,GAClD,C","sources":["pages/SearchBar.jsx","services/theMoviesDbAPI.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { searchMovieByKeyword } from 'services/theMoviesDbAPI';\nimport { Link } from 'react-router-dom';\n\nconst Searchbar = () => {\n  const [movies, setMovies] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const query = searchQuery.get('query');\n  const location = useLocation();\n\n  // const { state } = useLocation();\n  // const submittedSearchQuery = state?.searchQuery;\n\n  // const [searchQuery, setSearchQuery] = useState(submittedSearchQuery || '');\n\n  // useEffect(() => {\n  //   if (submittedSearchQuery) {\n  //     searchMovieByKeyword(submittedSearchQuery).then(response => {\n  //       const movie = response.data.results;\n  //       setMovies(movie);\n  //     });\n  //   }\n  // }, [submittedSearchQuery]);\n\n  // const [movies, setMovies] = useState([]);\n  // const navigate = useNavigate();\n\n  useEffect(() => {\n    if (query) {\n      searchMovieByKeyword(query)\n        .then(res => {\n          setMovies(res.data.results);\n        })\n        .catch(error => {\n          console.log(error.message);\n        });\n    }\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setSearchQuery({ query: e.currentTarget.search.value });\n    // if (searchQuery) {\n    //   navigate('', { state: { searchQuery: searchQuery }, replace: false });\n    // } else {\n    //   navigate('', { state: { searchQuery: null }, replace: true });\n    //   setMovies([]);\n    // }\n  };\n\n  return (\n    <>\n      <div>\n        <h1>HELLO</h1>\n        <h2>I am here to help you find things</h2>\n        <form onSubmit={handleSubmit}>\n          <label>\n            <span\n              style={{\n                fontSize: '20px',\n                fontStyle: 'italic',\n                color: 'black',\n                fontWeight: 'bold',\n              }}\n            >\n              Search:\n            </span>\n            <br></br>\n            <input\n              style={{\n                width: '200px',\n                marginTop: '10px',\n                padding: '5px',\n                border: '2px solid black',\n              }}\n              placeholder=\"Type a movie you want to find\"\n              type=\"text\"\n              name=\"search\"\n              value={inputValue}\n              onChange={e => {\n                setInputValue(e.currentTarget.value);\n              }}\n            />\n          </label>\n          {/* <button type=\"submit\">Search</button> */}\n        </form>\n      </div>\n      <div>\n        <div>\n          <ul>\n            {movies.length !== 0 &&\n              movies.map((movie, index) => (\n                <li key={movie.id}>\n                  {/* <Link to={location => ({ ...location, pathname: \"/courses\" })} /> */}\n                  <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                    {/* <Link to={String(user.id)}> */}\n                    {movie.title\n                      ? `${index + 1}. ${movie.title}`\n                      : `${index + 1}. ${movie.name}`}\n                  </Link>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Searchbar;\n","import axios from 'axios';\n\nexport const API_KEY = '5f7559859986b78c33527b478befbc82';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${BASE_URL}trending/all/day?api_key=${API_KEY}`);\n};\nexport const getMovieDetailsById = id => {\n  return axios\n    .get(\n      `\n${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    )\n    .then(response => response.data);\n};\nexport const getCastById = id => {\n  return axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n};\nexport const getReviewsById = id => {\n  return axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n};\nexport const searchMovieByKeyword = keyword => {\n  return axios.get(`\n${BASE_URL}search/movie?query=${keyword}&api_key=${API_KEY}`);\n};\n"],"names":["useState","movies","setMovies","inputValue","setInputValue","useSearchParams","searchQuery","setSearchQuery","query","get","location","useLocation","useEffect","searchMovieByKeyword","then","res","data","results","catch","error","console","log","message","onSubmit","e","preventDefault","currentTarget","search","value","style","fontSize","fontStyle","color","fontWeight","width","marginTop","padding","border","placeholder","type","name","onChange","length","map","movie","index","to","id","state","from","title","API_KEY","BASE_URL","getTrendingMovies","axios","getMovieDetailsById","response","getCastById","getReviewsById","keyword"],"sourceRoot":""}