{"version":3,"file":"static/js/277.c5655ab6.chunk.js","mappings":"sMA6FA,UAxFkB,WAChB,IAAQA,GAAUC,EAAAA,EAAAA,MAAVD,MACFE,EAAoB,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAOG,YAEpC,GAAsCC,EAAAA,EAAAA,UAASF,GAAwB,IAAvE,eAAOC,EAAP,KAAoBE,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACJJ,IACFK,EAAAA,EAAAA,IAAqBL,GAAsBM,MAAK,SAAAC,GAC9C,IAAMC,EAAQD,EAASE,KAAKC,QAC5BC,EAAUH,EACX,GAEJ,GAAE,CAACR,IAEJ,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOU,EAAP,KAAeD,EAAf,KACME,GAAWC,EAAAA,EAAAA,MAajB,OACE,iCACE,4BACE,mCACA,+DACA,iBAAMC,SAhBS,SAAAC,GACnBA,EAAEC,iBAEEhB,EACFY,EAAS,GAAI,CAAEf,MAAO,CAAEG,YAAaA,GAAeiB,SAAS,KAE7DL,EAAS,GAAI,CAAEf,MAAO,CAAEG,YAAa,MAAQiB,SAAS,IACtDP,EAAU,IAEb,EAOK,UACE,8BACE,iBACEQ,MAAO,CACLC,SAAU,OACVC,UAAW,SACXC,MAAO,QACPC,WAAY,QALhB,sBAUA,mBACA,kBACEJ,MAAO,CACLK,MAAO,QACPC,UAAW,OACXC,QAAS,MACTC,OAAQ,mBAEVC,YAAY,gCACZC,KAAK,OACLC,KAAK,SACLC,MAAO9B,EACP+B,SAAU,SAAAhB,GACRb,EAAea,EAAEiB,OAAOF,MACzB,aAMT,0BACE,0BACE,wBACqB,IAAlBnB,EAAOsB,QACNtB,EAAOuB,KAAI,SAAC3B,EAAO4B,GAAR,OACT,yBAEE,SAAC,KAAD,CAAMC,GAAE,kBAAa7B,EAAM8B,IAA3B,SAEG9B,EAAM+B,MAAN,UACMH,EAAQ,EADd,aACoB5B,EAAM+B,OAD1B,UAEMH,EAAQ,EAFd,aAEoB5B,EAAMsB,SANtBtB,EAAM8B,GADN,YAgBxB,C,oKCzFYE,EAAU,mCACVC,EAAW,gCAEXC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,oCAAiDD,GACzD,EACYI,EAAsB,SAAAN,GACjC,OAAOK,EAAAA,EAAAA,IAAA,YAGPF,EAHO,iBAGUH,EAHV,oBAGwBE,IAE5BlC,MAAK,SAAAC,GAAQ,OAAIA,EAASE,IAAb,GACjB,EACYoC,EAAc,SAAAP,GACzB,OAAOK,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BH,EAA9B,4BAAoDE,GAC5D,EACYM,EAAiB,SAAAR,GAC5B,OAAOK,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BH,EAA9B,4BAAoDE,GAC5D,EACYnC,EAAuB,SAAA0C,GAClC,OAAOJ,EAAAA,EAAAA,IAAA,YACPF,EADO,8BACuBM,EADvB,oBAC0CP,GAClD,C","sources":["pages/SearchBar.jsx","services/theMoviesDbAPI.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { searchMovieByKeyword } from 'services/theMoviesDbAPI';\nimport { Link } from 'react-router-dom';\n\nconst Searchbar = () => {\n  const { state } = useLocation();\n  const submittedSearchQuery = state?.searchQuery;\n\n  const [searchQuery, setSearchQuery] = useState(submittedSearchQuery || '');\n\n  useEffect(() => {\n    if (submittedSearchQuery) {\n      searchMovieByKeyword(submittedSearchQuery).then(response => {\n        const movie = response.data.results;\n        setMovies(movie);\n      });\n    }\n  }, [submittedSearchQuery]);\n\n  const [movies, setMovies] = useState([]);\n  const navigate = useNavigate();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery) {\n      navigate('', { state: { searchQuery: searchQuery }, replace: false });\n    } else {\n      navigate('', { state: { searchQuery: null }, replace: true });\n      setMovies([]);\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <h1>HELLO</h1>\n        <h2>I am here to help you find things</h2>\n        <form onSubmit={handleSubmit}>\n          <label>\n            <span\n              style={{\n                fontSize: '20px',\n                fontStyle: 'italic',\n                color: 'black',\n                fontWeight: 'bold',\n              }}\n            >\n              Search:\n            </span>\n            <br></br>\n            <input\n              style={{\n                width: '200px',\n                marginTop: '10px',\n                padding: '5px',\n                border: '2px solid black',\n              }}\n              placeholder=\"Type a movie you want to find\"\n              type=\"text\"\n              name=\"search\"\n              value={searchQuery}\n              onChange={e => {\n                setSearchQuery(e.target.value);\n              }}\n            />\n          </label>\n          {/* <button type=\"submit\">Search</button> */}\n        </form>\n      </div>\n      <div>\n        <div>\n          <ul>\n            {movies.length !== 0 &&\n              movies.map((movie, index) => (\n                <li key={movie.id}>\n                  {/* <Link to={location => ({ ...location, pathname: \"/courses\" })} /> */}\n                  <Link to={`/movies/${movie.id}`}>\n                    {/* <Link to={String(user.id)}> */}\n                    {movie.title\n                      ? `${index + 1}. ${movie.title}`\n                      : `${index + 1}. ${movie.name}`}\n                  </Link>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Searchbar;\n","import axios from 'axios';\n\nexport const API_KEY = '5f7559859986b78c33527b478befbc82';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${BASE_URL}trending/all/day?api_key=${API_KEY}`);\n};\nexport const getMovieDetailsById = id => {\n  return axios\n    .get(\n      `\n${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    )\n    .then(response => response.data);\n};\nexport const getCastById = id => {\n  return axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n};\nexport const getReviewsById = id => {\n  return axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n};\nexport const searchMovieByKeyword = keyword => {\n  return axios.get(`\n${BASE_URL}search/movie?query=${keyword}&api_key=${API_KEY}`);\n};\n"],"names":["state","useLocation","submittedSearchQuery","searchQuery","useState","setSearchQuery","useEffect","searchMovieByKeyword","then","response","movie","data","results","setMovies","movies","navigate","useNavigate","onSubmit","e","preventDefault","replace","style","fontSize","fontStyle","color","fontWeight","width","marginTop","padding","border","placeholder","type","name","value","onChange","target","length","map","index","to","id","title","API_KEY","BASE_URL","getTrendingMovies","axios","getMovieDetailsById","getCastById","getReviewsById","keyword"],"sourceRoot":""}