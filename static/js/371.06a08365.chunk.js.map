{"version":3,"file":"static/js/371.06a08365.chunk.js","mappings":"sMAqDA,UAjDkB,WAChB,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAkCE,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4CF,EAAAA,EAAAA,WAAS,GAArD,eAAOG,EAAP,KAAuBC,EAAvB,KAEMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBV,GACjBW,MAAK,SAAAR,GACJC,EAAUD,GACVG,GAAkB,GAClBM,QAAQC,IAAIV,EACb,IACAW,OAAM,SAAAC,GACLR,EAAS,iBACTD,GAAkB,GAClBM,QAAQC,IAAIE,EACb,GACJ,GAAE,CAACf,EAAIO,KAGN,4BACE,8CAAsBP,KACrBK,IACC,iCACE,gBACEW,IAAG,0CAAqCb,EAAac,eACrDC,IAAI,cAEN,wBAAKf,EAAagB,kBAClB,oCAAYhB,EAAaiB,iBACzB,sCACA,uBAAIjB,EAAakB,YACjB,mCACClB,EAAamB,OAAOC,KAAI,SAAAC,GAAK,OAC5B,uBAAmBA,EAAMC,MAAjBD,EAAMxB,GADc,QAMlC,SAAC,KAAD,CAAM0B,GAAE,OAAR,mBACA,mBACA,SAAC,KAAD,CAAMA,GAAE,UAAR,sBACA,SAAC,KAAD,CAAQC,UAAU,2CAGvB,C,oKCjDYC,EAAU,mCACVC,EAAW,gCAEXC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,oCAAiDD,GACzD,EACYlB,EAAsB,SAAAV,GACjC,OAAO+B,EAAAA,EAAAA,IAAA,YAGPF,EAHO,iBAGU7B,EAHV,oBAGwB4B,IAE5BjB,MAAK,SAAAqB,GAAQ,OAAIA,EAASC,IAAb,GACjB,EACYC,EAAc,SAAAlC,GACzB,OAAO+B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8B7B,EAA9B,4BAAoD4B,GAC5D,EACYO,EAAiB,SAAAnC,GAC5B,OAAO+B,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8B7B,EAA9B,4BAAoD4B,GAC5D,EACYQ,EAAuB,SAAAC,GAClC,OAAON,EAAAA,EAAAA,IAAA,YACPF,EADO,8BACuBQ,EADvB,oBAC0CT,GAClD,C","sources":["pages/MoviesDet.jsx","services/theMoviesDbAPI.js"],"sourcesContent":["import { getMovieDetailsById } from 'services/theMoviesDbAPI';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate, Outlet, useParams } from 'react-router-dom';\n\nconst MoviesDet = () => {\n  const { id } = useParams();\n  const [movieDetails, setMovies] = useState({});\n  const [fetchCompleted, setFetchCompleted] = useState(false);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getMovieDetailsById(id)\n      .then(movieDetails => {\n        setMovies(movieDetails);\n        setFetchCompleted(true);\n        console.log(movieDetails);\n      })\n      .catch(error => {\n        navigate('incorrect way');\n        setFetchCompleted(true);\n        console.log(error);\n      });\n  }, [id, navigate]);\n\n  return (\n    <div>\n      <h1>You see a movie #{id}</h1>\n      {fetchCompleted && (\n        <>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${movieDetails.backdrop_path}`}\n            alt=\"movieImg\"\n          />\n          <h1>{movieDetails.original_title}</h1>\n          <h2>Rating:{movieDetails.vote_average}</h2>\n          <h2>Overview</h2>\n          <p>{movieDetails.overview}</p>\n          <h3>Genres</h3>\n          {movieDetails.genres.map(genre => (\n            <p key={genre.id}>{genre.name}</p>\n          ))}\n        </>\n      )}\n\n      <Link to={`cast`}>CAST</Link>\n      <br />\n      <Link to={`reviews`}>REVIEWS</Link>\n      <Outlet fallback={<h1>Loading...</h1>} />\n    </div>\n  );\n};\n\nexport default MoviesDet;\n","import axios from 'axios';\n\nexport const API_KEY = '5f7559859986b78c33527b478befbc82';\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${BASE_URL}trending/all/day?api_key=${API_KEY}`);\n};\nexport const getMovieDetailsById = id => {\n  return axios\n    .get(\n      `\n${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    )\n    .then(response => response.data);\n};\nexport const getCastById = id => {\n  return axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n};\nexport const getReviewsById = id => {\n  return axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n};\nexport const searchMovieByKeyword = keyword => {\n  return axios.get(`\n${BASE_URL}search/movie?query=${keyword}&api_key=${API_KEY}`);\n};\n"],"names":["id","useParams","useState","movieDetails","setMovies","fetchCompleted","setFetchCompleted","navigate","useNavigate","useEffect","getMovieDetailsById","then","console","log","catch","error","src","backdrop_path","alt","original_title","vote_average","overview","genres","map","genre","name","to","fallback","API_KEY","BASE_URL","getTrendingMovies","axios","response","data","getCastById","getReviewsById","searchMovieByKeyword","keyword"],"sourceRoot":""}