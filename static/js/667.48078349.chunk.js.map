{"version":3,"file":"static/js/667.48078349.chunk.js","mappings":"sMA2DA,UAvDmB,WACjB,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAeC,EAAAA,EAAAA,UACfC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACHN,KAELO,EAAAA,EAAAA,IAAqBP,GAClBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAlB,IACbH,KAAKZ,GACRgB,QAAQC,IAAIC,QAAQ,KACrB,GAAE,CAACd,IAiBJ,OACE,iCACE,kBAAMe,SAjBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACfpB,EAAgB,CAAEC,MAAOkB,EAAKE,SAASC,OAAOC,QAC9CJ,EAAKK,QACLrB,EAAasB,QAAQC,aAAa,WAAY,GAC/C,EAWG,WACE,kBAAOC,KAAK,SAASC,KAAK,OAAOC,SAXjB,SAAAZ,GACDA,EAAEG,OAAOG,MACbO,OACb3B,EAAasB,QAAQM,gBAAgB,YAErC5B,EAAasB,QAAQC,aAAa,WAAY,GAEjD,KAKK,mBAAQE,KAAK,SAASI,IAAK7B,EAAc8B,UAAQ,EAAjD,uBAIDrC,EAAOsC,QACN,wBACGtC,EAAOuC,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMnC,GAAxC,SACG+B,EAAMK,MAAQL,EAAMK,MAAQL,EAAMT,QAF9BS,EAAME,GADA,OASnB,gFAIP,C,oKCvDKI,EAAU,mCACVC,EAAW,gCACJC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,oCAAiDD,GACzD,EACYI,EAAsB,SAAAR,GACjC,OAAOO,EAAAA,EAAAA,IAAA,YAGPF,EAHO,iBAGUL,EAHV,oBAGwBI,IAE5BjC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACjB,EACYoC,EAAc,SAAAT,GACzB,OAAOO,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BL,EAA9B,4BAAoDI,GAC5D,EACYM,EAAiB,SAAAV,GAC5B,OAAOO,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BL,EAA9B,4BAAoDI,GAC5D,EACYlC,EAAuB,SAAAyC,GAClC,OAAOJ,EAAAA,EAAAA,IAAA,YACPF,EADO,8BACuBM,EADvB,oBAC0CP,GAClD,C","sources":["pages/MoviesPage/MoviesPage.jsx","services/theMoviesDbAPI.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { searchMovieByKeyword } from 'services/theMoviesDbAPI';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const searchBtnRef = useRef();\n  const location = useLocation();\n  useEffect(() => {\n    if (!query) return;\n\n    searchMovieByKeyword(query)\n      .then(response => response.data.results)\n      .then(setMovies);\n    console.log(Boolean([]));\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    setSearchParams({ query: form.elements.search.value });\n    form.reset();\n    searchBtnRef.current.setAttribute('disabled', '');\n  };\n  const onInputChange = e => {\n    const inputValue = e.target.value;\n    if (inputValue.trim()) {\n      searchBtnRef.current.removeAttribute('disabled');\n    } else {\n      searchBtnRef.current.setAttribute('disabled', '');\n    }\n  }; // disable search button if search field is empty or only spaces inputed\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input name=\"search\" type=\"text\" onChange={onInputChange} />\n        <button type=\"submit\" ref={searchBtnRef} disabled>\n          Search\n        </button>\n      </form>\n      {movies.length ? (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title ? movie.title : movie.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We didn`t find anything ðŸ™„. Try another.</p>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = '5f7559859986b78c33527b478befbc82';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nexport const getTrendingMovies = () => {\n  return axios.get(`${BASE_URL}trending/all/day?api_key=${API_KEY}`);\n};\nexport const getMovieDetailsById = id => {\n  return axios\n    .get(\n      `\n${BASE_URL}movie/${id}?api_key=${API_KEY}`\n    )\n    .then(response => response.data);\n};\nexport const getCastById = id => {\n  return axios.get(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`);\n};\nexport const getReviewsById = id => {\n  return axios.get(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`);\n};\nexport const searchMovieByKeyword = keyword => {\n  return axios.get(`\n${BASE_URL}search/movie?query=${keyword}&api_key=${API_KEY}`);\n};\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","searchBtnRef","useRef","location","useLocation","useEffect","searchMovieByKeyword","then","response","data","results","console","log","Boolean","onSubmit","e","preventDefault","form","target","elements","search","value","reset","current","setAttribute","name","type","onChange","trim","removeAttribute","ref","disabled","length","map","movie","to","id","state","from","title","API_KEY","BASE_URL","getTrendingMovies","axios","getMovieDetailsById","getCastById","getReviewsById","keyword"],"sourceRoot":""}